package com.niit.controller;



import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.niit.Dao.BlogPostDao;
import com.niit.Dao.UserDao;
import com.niit.model.BlogPost;
import com.niit.model.User;


@Controller
public class BlogPostController {
	@Autowired
	private BlogPostDao blogPostDao;
	@Autowired
	private UserDao userDao;
	@RequestMapping(value="/saveblogpost" ,method=RequestMethod.POST)
	public ResponseEntity<?>saveBlogPost(@RequestBody BlogPost blogPost,HttpSession session){
		if(session.getAttribute("username")==null){
			Error error=new Error("UnAuthorized success");
					return new ResponseEntity<Error>(error,HttpStatus.UNAUTHORIZED);
		}
		String username=(String)session.getAttribute("username");
	

	try{
		blogPost.setPostedOn(new Date());
		User postedBy=userDao.getUserByUsername(username);
	blogPostDao.saveBlogPost(blogPost);
		
		
		
		blogPostDao.saveBlogPost(blogPost);
		return new ResponseEntity<BlogPost>(blogPost,HttpStatus.OK);
	
		
		
				
	}catch(Exception e)
	{
		Error error=new Error("unable to insert" + e.getMessage());
				return new ResponseEntity<Error>(error,HttpStatus.INTERNAL_SERVER_ERROR);
	}
	}
	@RequestMapping(value="/getallblogs/{approved})",method=RequestMethod.GET)
	public ResponseEntity<?> getAllBlogs(@PathVariable int approved,HttpSession session){
		if(session.getAttribute("username")==null){
			Error error=new Error("unauthorized access");
			return new ResponseEntity<Error>(error,HttpStatus.UNAUTHORIZED);
			
				
				
	}
		List<BlogPost> blogPosts=blogPostDao.getAllBlogs(approved);
		return new ResponseEntity<List<BlogPost>>(blogPosts,httpStatus.OK);
		
	}
}
